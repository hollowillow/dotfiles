#############
# FUNCTIONS #
#############

### MONITOR BRIGHTNESS ###

# brightness up
# XF86MonBrightnessUp

# brightness down
# XF86MonBrightnessDown

### VOLUME CONTROL ###

# volume up
XF86AudioRaiseVolume
	pactl set-sink-volume @DEFAULT_SINK@ +5% 

# volume down
XF86AudioLowerVolume
	pactl set-sink-volume @DEFAULT_SINK@ -5%

# volume mute
XF86AudioMute
	pactl set-sink-mute @DEFAULT_SINK@ toggle

### MEDIA CONTROL ###
# to work with mpv make sure https://github.com/hoyon/mpv-mpris script is installed

# media next
XF86AudioNext 
	playerctl next

# media pause
XF86AudioPlay
	playerctl play-pause

# media previous
XF86AudioPrev
	playerctl previous

# take screenshot
Print + {ctrl,_} + {alt,_}
	magick {import,import -window root} {"$HOME/media/pictures/screenshot.png",clipboard:}


###########
# SCRIPTS #
###########


# autostart script
Super_L ; a 
        autostart

# bookmark script
Super_L ; b ; {b,a,d}
        bookmark -a {open,add,remove} -f $BOOKMARKS_DIR

Super_L ; w : r
        feh --bg-scale --recursive --no-fehbg --random "$WALLPAPERS_DIR" &

#############
# LAUNCHERS #
#############

# terminal emulator
alt + Return
        st

# program launcher
alt + space
	dmenu_run

# manual script
alt + slash
        manmenu

# web search script
alt + {o,O}
        search -b {tabFirefox,instanceFirefox}

# power script
alt + Escape
        power

##################
# WINDOW MANAGER #
##################

### PICOM ###

# change opacity focused window
alt + {minus,equal,shift + equal}
        picom-trans -c {-5,+5,--toggle 100}

### KILL/RESTART WM ###

# restart bspwm and sxhkd
alt + shift + r
    bspc wm -r; pkill -usr1 -x sxhkd; notify-send 'sxhkd' 'Restarted WM'

# kill bspwm
alt + shift + Escape
        bspc quit

### CLOSE/KILL PROGRAMS ### 

# close/kill focused window
alt + {q,Q}
	bspc node -{c,k}

### LAYOUT ###

# switch layouts
# needs https://github.com/phenax/bsp-layout
alt + m : {j,k}
	bsp-layout {next,previous} --layouts tiled,tall,rtall,wide,rwide,grid

### FLAGS ###

# set the window state
alt + n ; {t,T,f,F}
	bspc node -t {tiled,pseudo_tiled,fullscreen,floating}

# set the node flags
alt + n ; {m,l,s,p}
	bspc node -g {marked,locked,sticky,private}

### MOVEMENT ###

# focus the next/previous window in the current desktop
alt + {_,shift + }{j,k}
	bspc node -{f,s} {next,prev}.local.!hidden.window

# rotate tree
alt + {l,h}
    bspc node @/ -C {forward,backward}

# focus desktop
alt + {a,s,d,f,g,e,w}
	bspc desktop -f '^{1-7}' 

# send to desktop
alt + shift + {a,s,d,f,g,e,w}
	bspc node -d '^{1-7}'

# send to desktop and follow
alt + ctrl + {a,s,d,f,g,e,w}
	bspc node -d '^{1-7}' --follow

# ### MOVEMENT ### 
#
# # focus the node in the given direction
# alt + {_,shift + }{h,j,k,l}
# 	bspc node -{f,s} {west,south,north,east}
#
# # focus the node for the given path jump
# #alt + {p,b,comma,period}
# #	bspc node -f @{parent,brother,first,second}

### RESIZE ###

# dynamically expand/contract window 
alt + r : {h,j,k,l}
    STEP=20; SELECTION={1,2,3,4}; \
    bspc node -z $(echo "left -$STEP 0,bottom 0 $STEP,top 0 -$STEP,right $STEP 0" | cut -d',' -f$SELECTION) || \
    bspc node -z $(echo "right -$STEP 0,top 0 $STEP,bottom 0 -$STEP,left $STEP 0" | cut -d',' -f$SELECTION)

### SCRATCHPAD ###

# tdrop
# alt + {1-5}
        # tdrop -am --class st -w 40% -x 30% -y 25% -n {0 st,1 st -e ranger,2 st, 3 st, 4 st}
alt + b
        tdrop -am --class st -s dropdown -n 0 st
